services:
    redis:
        image: redis:7

    nginx:
        build:
            context: ./docker/nginx
            dockerfile: ./Dockerfile
        ports:
            - 8000:80
        depends_on:
            - web
        volumes:
            - media_files:/var/www/media
            - static_files:/var/www/static

    db:
        image: postgres
        volumes:
            - postgres_db:/var/lib/postgresql/data
        environment:
            - POSTGRES_NAME=careveillance
            - POSTGRES_DB=careveillance
            - POSTGRES_USER=careveillanceuser
            - POSTGRES_PASSWORD=insecureChangeThis
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready" ]
            interval: 5s
            timeout: 5s
            retries: 10

    web:
        &app-base
        image: privatebutts/careveillance:latest
        build:
            context: ./
            dockerfile: ./docker/web/Dockerfile
        volumes:
            - ./:/usr/src/careveillance
            - media_files:/usr/src/careveillance/mediafiles
            - shared_static:/usr/src/careveillance/static
            - static_files:/usr/src/careveillance/staticfiles
        environment:
            &app-env
            DATABASE_URL: "postgresql://careveillanceuser:insecureChangeThis@db:5432/careveillance"
            CSRF_TRUSTED_ORIGINS: "http://localhost:8000,http://127.0.0.1:8000"
        command: python manage.py runserver 0.0.0.0:8000
        healthcheck:
            test: [ "CMD", "python", "manage.py", "watchman" ]
            interval: 5s
            timeout: 5s
            retries: 10

        depends_on:
            &app-deps
            db:
                condition: service_healthy
            redis:
                condition: service_started

    scheduler:
        &celery
        <<: *app-base
        environment:
            <<: *app-env
            CELERY_BROKER_URL: "redis://redis:6379/0"
        command: celery -A careveillance beat -l info
        entrypoint: ""
        depends_on:
            <<: *app-deps
            web:
                condition: service_healthy

    worker:
        <<: *celery
        command: celery -A careveillance worker -l info

volumes:
    postgres_db:
    shared_static:
    static_files:
    media_files:
